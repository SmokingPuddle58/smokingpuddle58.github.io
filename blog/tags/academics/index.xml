<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Academics on SmokingPuddle58&#39;s Blog</title>
        <link>https://smokingpuddle58.github.io/blog/tags/academics/</link>
        <description>Recent content in Academics on SmokingPuddle58&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 09 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://smokingpuddle58.github.io/blog/tags/academics/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Spatial Filters</title>
        <link>https://smokingpuddle58.github.io/blog/p/spatial-filters/</link>
        <pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate>
        
        <guid>https://smokingpuddle58.github.io/blog/p/spatial-filters/</guid>
        <description>&lt;h2 id=&#34;smoothing-lowpass-spatial-filters&#34;&gt;Smoothing (Lowpass) Spatial Filters&lt;/h2&gt;
&lt;p&gt;Smoothing spatial filters are used mainly for noise reduction, reduce aliasing and some irrelevant details in the image. There are different types of such filters, which will be introduced below.&lt;/p&gt;
&lt;h3 id=&#34;box-filter-kernels&#34;&gt;Box Filter Kernels&lt;/h3&gt;
&lt;p&gt;This is the most simple filter kernel. This filter can be created by creating an $m\times n$ array with all &lt;code&gt;1&lt;/code&gt;&amp;rsquo;s, then every element is divided by the sum of coefficients in the array (In this case, $\frac{1}{mn}$). To create such a kernel in numpy, we can use the following code.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;averaging_filter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ones&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;For example, a $3\times 3$ averaging filter will look like this:&lt;/p&gt;
&lt;p&gt;$$
\begin{bmatrix}
\frac{1}{9} &amp;amp; \frac{1}{9} &amp;amp;  \frac{1}{9} \\
&amp;amp; \\
\frac{1}{9} &amp;amp; \frac{1}{9} &amp;amp;  \frac{1}{9} \\
&amp;amp; \\
\frac{1}{9} &amp;amp; \frac{1}{9} &amp;amp;  \frac{1}{9} \\
\end{bmatrix}
$$&lt;/p&gt;
&lt;p&gt;The filter are suitable for quick experimentation. However, it is a poor approximation to blurring characteristics of lenses, also the filter only favor blurring along prependicular directions.&lt;/p&gt;
&lt;h3 id=&#34;lowpass-gaussian-filter-kernels&#34;&gt;Lowpass Gaussian Filter Kernels&lt;/h3&gt;
&lt;p&gt;Gaussian kernel is the only circularly symmetric kernels that are separable. It is in the following form.&lt;/p&gt;
&lt;p&gt;$$w(s,t) = G(s,t) = Ke^{-\frac{s^2+t^2}{2\sigma^2}}$$&lt;/p&gt;
&lt;p&gt;It is possible to derive arbitrary $n\times n$ Gaussian filter kernels for given $\sigma$.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://smokingpuddle58.github.io/blog/blog/image.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Image 1&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
